
types CardinalsGridStuff { #Reusable templates for showing characters
	type window_cardinals_special_character = widget { #For showing the Pope, Preferatus, etc. Larger than nomrmal.
		allow_outside = yes
		size = {150 213}
		scale = 1.1

		icon = {
			parentanchor = hcenter|top
			texture = "gfx/interface/CollegeCardinals/papacy_nameplate_large_bg.dds" #texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
			alpha = 0.7
			position = {-12 -10} #don't fucking change
			text_single = {
				block "text" {text = "CARDINAL_WIND_UNIUI_POPENAME"}
				parentanchor = hcenter|vcenter
				#default_format = "#light_background"
				using = Font_Type_Flavor
				block "fontsize" { fontsize = 22 }
				#position = {0 -4}
			}
		}
		block "portrait" {portrait_head = {parentanchor = hcenter|vcenter position = {0 5} }}
		text_single = {
			parentanchor = bottom|hcenter
			position = {0 -25}
			text = "CARDINAL_WIND_UNIUI_POPENAME"
		}
	}
	type window_cardinals_portrait = portrait_head { # Normal character portrait used for Cardinals.
		# Type for changing the actual portrait
	}

	## Standard head portrait
	type portrait_unknown_head = widget {
		size = { 110 120 }

		background = {
			using = Background_Area_Solid
		}

		# widget = {
		# 	size = { 100% 100% }
		# 	using = Portrait_Background_Glows

		# 	block "empty_character" {}
		# }

		# portrait_button = {
		# 	parentanchor = bottom|hcenter
		# 	size = { 100 125 }
		# 	using = portrait_base

		# 	block "portrait_texture" {
		# 		portrait_texture = "[Character.GetPortrait('environment_head', 'camera_head', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
		# 	}

		# 	mask = "gfx/portraits/portrait_mask_head.dds"
		# 	effectname = "NoHighlight"

		# 	highlight_icon = {
		# 		name = "prison_bars"
		# 		visible = "[Character.IsImprisoned]"
		# 		visible_at_creation = no
		# 		size = { 100 118 }
		# 		parentanchor = bottom
		# 		effectname = "NoHighlight"
		# 		texture = "gfx/portraits/portrait_prison_head.dds"

		# 		modify_texture = {
		# 			name = "mask"
		# 			texture = "gfx/portraits/portrait_mask_head.dds"
		# 			spriteType = Corneredstretched
		# 			blend_mode = alphamultiply
		# 		}
		# 	}

		# 	block "portrait_button" {}
		# }

		#widget_portrait_frame = {}

		background = {
			size = { 100% 100% }
			texture = "gfx/portraits/portrait_frame.dds"
			using = Color_Grey
			alpha = 0.7
			margin = { -4 -4 }
		}

		#portrait unknown glow
		button = {
			name = "portrait_unknown_head_glow"
			parentanchor = hcenter|vcenter
			position = {0 5}
			gfxtype = framedbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/portraits/unknown_portraits/button_unknown_head.dds"
			size = { 98 125 }
			framesize = { 384 480 }
			upframe = 1
			overframe = 2

			block "glow_visible" {
				visible = "[Not(Character.IsValid)]"
			}

			#block "glow_flip" {}

			#block "onclick" {}

		}
	}

	type window_cardinals_character = widget { # Lists character's name and portrait
		allow_outside = yes
		size = {150 150}
		vbox = {
			margin_top = -0
			icon = {
				texture = "gfx/interface/CollegeCardinals/papacy_nameplate_small_bg.dds"
				alpha = 0.7
				text_single = {
					block "text" {text = cardinals_cardinal}
					parentanchor = hcenter|vcenter
					#default_format = "#light_background"
					using = Font_Type_Flavor
					fontsize = 20
					position = {0 -5}
				}
			}
			window_cardinals_portrait = {}
			# text_single = {
			#     text = "cardinals_cardinal3"
			# }
			text_single = {
				visible = "[Character.HasLandedTitles]"
				text = "cardinals_cardinal2"
			}
			text_single = {
				visible = "[Not(Character.HasLandedTitles)]"
				text = "cardinals_cardinal4"
			}
		}
	}
	type window_cardinal_bishop = widget { # Can be used for a non-cardinal, but is unused
		size = {300 250}
		datacontext = "[Scope.GetCharacter]"
		window_cardinals_character = {}
		window_cardinals_campaign = {}
		window_cardinals_score = {}
	}
	type window_cardinal_griditem = widget{ # Contains all the information of a single entry in the cardinals grid
		size = {299 210}
		background = { # Show a gold border for a cardinal that has you as its beneficiary.
			texture = "gfx/interface/CollegeCardinals/tile_selected_gold.dds"
			spriteType = Corneredtiled
			spriteborder = { 6 6 }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			visible = "[ObjectsEqual(Scope.Var('beneficiary').Char,GetPlayer)]"
		}
		datacontext = "[Scope.GetCharacter]"
		window_cardinals_character = {}
		window_cardinals_score = {}
	}

	type window_cardinal_fixedgrid = fixedgridbox{ # Not currently used. Can be used in place of the Dynamicgridbox
		name = "cardinal_grid"
		datamodel = "[Religion.MakeScope.GetList('cardinal_characters')]"
		datamodel_wrap = 4
		addcolumn = 300
		addrow = 245
		flipdirection = yes
		item = {
			window_cardinal_griditem = {}
		}
	}
	type window_cardinal_dynamicgrid = dynamicgridbox{ #Used
		name = "cardinal_grid"
		ignoreinvisible = yes
		datamodel = "[Religion.MakeScope.GetList('cardinal_characters')]"
		datamodel_wrap = 4
		flipdirection = yes
		item = {
			window_cardinal_griditem = {}
		}
	}
}

types CardinalsElection {

	type window_cardinals_score = widget { # Show score for the upcoming election (Bishop-to-cardinal or cardinal-to-pope)
		size = {100 100}
		parentanchor = hcenter|vcenter
		position = { 40 0 }
		vote_amount_icon = {
			position = { 63 45 }
		}
		text_single = {
			position = { 64 70 }
			block "score" {text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('cardinal_to_pope_score')|0]" }
			fontsize = 25
		}
		tooltipwidget = {cardinal_score_breakdown_tooltip = {}}
	}
	type window_cardinals_campaign = widget { # Show much money has been invested in this character's election campaign
		size            = {50 30}
		position        = {-10 -10}
		parentanchor    = left|top
		vbox = {
			spacing = -40
			position = {-35 -5}
			icon = {texture = "gfx/interface/CollegeCardinals/Coins.png"}
			text_single = {
				visible = "[Character.MakeScope.Var('cardinal_campaign_contribution').IsSet]"
				text = "[Character.MakeScope.Var('cardinal_campaign_contribution').GetValue|0]"
				#"[GuiScope.SetRoot(Character.MakeScope).ScriptValue('cardinal_money_bonus')|0]"
				fontsize = 25
			}
		}
	}
	type window_cardinals_invest = button_primary { # Add x gold to the character's election fund
		size = { 120 50 }
		position = { -25 15 }
		parentanchor = left|bottom
		text = invest
		tooltip = "window_cardinals_invest_tooltip"
		enabled = "[GetScriptedGui('invest_in_cardinal').IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		onclick = "[GetScriptedGui('invest_in_cardinal').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		alwaystransparent = no
		layoutpolicy_vertical = expanding
	}
	type window_cardinals_divest = button_primary { # Retrieve 50% of your donation from the character's election fund
		size = { 120 50 }
		position = { 25 15 }
		parentanchor = right|bottom
		text = withdraw
		tooltip = "window_cardinals_divest_tooltip"
		enabled = "[GetScriptedGui('divest_from_cardinal').IsValid(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		onclick = "[GetScriptedGui('divest_from_cardinal').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
		tooltip_when_disabled = "window_cardinals_divest_tooltip_not_funded"
		alwaystransparent = no
		layoutpolicy_vertical = expanding
	}
	type window_cardinals_invest_divest = widget { # Show both invest and divest buttons
		size = { 200 100 }
		parentanchor = hcenter|bottom
		allow_outside = yes
		window_cardinals_invest = {}
		window_cardinals_divest = {}
	}
}

types Cardinals {
    type window_cardinals_open_button = button {
        size = { 100 100 }
        datacontext = "[Faith.GetReligion]"
        visible = "[Faith.MakeScope.Var('uses_cardinal_module').IsSet]"
        icon    = {texture = "gfx/interface/CollegeCardinals/HouseofCardinalsButton.png"}
        raw_tooltip = "#T Das [collegeofcardinals|E]#!."
        onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
        onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
        onclick = "[GetScriptedGui('cardinal_music').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

		# # Testing?
		# onclick = "[GetVariableSystem.Set( 'church_view_tabs', 'holychurch' )]"
		# datacontext = "[GetScriptedGui( 'TCT_update_archbishoric' )]"
		# #datacontext = "[GetScriptedGui( 'TCT_update_pentarchy' )]"
		# onclick = "[GetVariableSystem.Toggle( 'pentarchy_open' )]"
		# onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
		# onclick = "[GetScriptedGui( 'TCT_pentarchy_map' ).Execute(GuiScope.End)]"
		# onclick = "[SetMapMode( 'TCT_pentarchy' )]"
		# down = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"

		alwaystransparent = no
        layoutpolicy_vertical = expanding
    }


	type window_cardinals = window {
		state = {
			name = _show
			position = { 0 0 }
			on_start = "[GetVariableSystem.Set( 'church_view_tabs', 'holychurch' )]"
			on_start = "[GetVariableSystem.Set( 'hide_bottom_left_HUD', 'true' )]"

			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
		}

		state = {
			name = _hide
			position = { -60 0 }
			on_start = "[GetVariableSystem.Clear( 'hide_bottom_left_HUD' )]"
			#on_start = "[GetVariableSystem.Clear( 'window_appoint_successor_theocracy' )]"
			#on_start = "[SetMapMode( 'realms' )]"
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
		}

		datacontext = "[Faith.GetReligion]"
		scale = 0.75
		layer = confirmation #vs top?
		#parentanchor = vcenter|hcenter
		#widgetanchor = right|center
		widgetanchor = left|vcenter
		parentanchor = right|vcenter
		#allow_outside = yes
		movable = no
		#position= {10% 10%}
		size    = { 1250 1150 }

		visible = "[And(Faith.MakeScope.Var('uses_cardinal_module').IsSet,GetVariableSystem.Exists('window_cardinals'))]"
		#alwaystransparent = no
		# background = {
		# 	alpha = 0.5
		# 	fittype = end
		# 	texture = "[Illustration.GetTexture( FaithWindow.GetFaith.MakeScope )]"

		# 	# modify_texture = {
		# 	#     mirror = vertical
		# 	#     blend_mode = alphamultiply
		# 	#     texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
		# 	# }
		# }
		#alpha = 0.5
		#layoutpolicy_vertical   = expanding
		#layoutpolicy_horizontal = expanding
		using = Window_Background
		using = Window_Decoration_Spike


		vbox = {
			using = Window_Margins

            ### Tabs
            hbox = {
                layoutpolicy_horizontal = expanding
                name = "tabs"

				button_tab = {
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetVariableSystem.Set( 'church_view_tabs', 'holychurch' )]"
                    datacontext = "[GetScriptedGui( 'TCT_update_archbishoric' )]"
					#datacontext = "[GetScriptedGui( 'TCT_update_pentarchy' )]"
					onclick = "[GetVariableSystem.Toggle( 'pentarchy_open' )]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'faith', Faith.MakeScope ).End ) ]"
					onclick = "[GetScriptedGui( 'TCT_pentarchy_map' ).Execute(GuiScope.End)]"
					onclick = "[SetMapMode( 'TCT_pentarchy' )]"
					down = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"
                    text = HOLY_CHURCH
					fontsize = 30
                    default_format = "#low"
					using = Font_Type_Flavor
                    using = tooltip_below
                }

				button_tab = {
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetVariableSystem.Set( 'church_view_tabs', 'collegeofcardinals' )]"
                    onclick = "[SetMapMode('religions')]"
                    down = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
                    text = COLLEGE_OF_CARDINALS
					fontsize = 30
                    default_format = "#low"
					using = Font_Type_Flavor
                    using = tooltip_below
				}
            }
			#COLLEGE OF CARDINALS
			header_pattern = {
				visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
				layoutpolicy_horizontal = expanding

				minimumsize = { 100% 10% }
				blockoverride "header_text"
				{
					text = cardinals_college
					scale = 1.3
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
					onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
				}
			}

			header_pattern = {
				visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"
				layoutpolicy_horizontal = expanding

				minimumsize = { 100% 10% }

				blockoverride "header_text"
				{
					text = the_holy_church
					scale = 1.3
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Toggle('window_cardinals')]"
					onclick = "[GetScriptedGui('refresh_cardinal_characters').Execute(GuiScope.SetRoot(Religion.MakeScope).End)]"
				}
			}

			background = {
				visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
				margin = { -30 0 } #remove this and _apse below to get Option1
				margin_bottom = -820
				texture = "gfx/interface/illustrations/decisions/MA_painted_tympanum.dds"
				fittype = centercrop
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
					blend_mode = alphamultiply
				}
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					alpha = 1.1
				}
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
					blend_mode = alphamultiply
					alpha = 0.4
				}
			}
			spacer = {
				size = { 80 85 }
			}

			expand = {}
		}

		#Special Characters; Pope and Preferatus
		widget = {
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			position = { 10% 4%}
			size = {80% 30%}
			hbox = {
				parentanchor = top|hcenter
				window_cardinals_special_character = {
					datacontext = "[FaithWindow.GetFaith.GetReligiousHead]"
					blockoverride "text" { raw_text = cardinals_pope}
					blockoverride "fontsize" { fontsize = 25 }
				}
				window_cardinals_special_character = {
					datacontext = "[Religion.MakeScope.Var('preferatus_character').GetCharacter]"
					blockoverride "text"    {   raw_text = cardinals_preferatus}
					blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter position = { -13 3 } } }
					blockoverride "fontsize" { fontsize = 26 }
					window_cardinals_score      = {position = { 40 0 }}
				}
			}
		}

		widget = { #added Scrollbox
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			size = {100% 45%}
			#allow_outside = yes
			position = {0 300}
			scrollarea = {
				background = {
					using = Background_Area_Border
				}
				position = {25 35}
				maximumsize = { -1 430 }
				autoresizescrollarea = yes
				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}
				scrollbarpolicy_horizontal = always_off
				#allow_outside = yes
				scrollwidget = {
					#allow_outside = yes
					#widget = {size = {0 50}}
					window_cardinal_dynamicgrid = {
						parentanchor = top|left
						#layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}
				}
			}
		}

		widget = {
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'collegeofcardinals' )]"
			vbox = {
				using = Window_Margins
				size = { 100% 50 }
                position = { 0 -48% }
				header_pattern = {
				    layoutpolicy_horizontal = expanding
				    #minimumsize = { 100% 10% }
                    # position = { 0 5 }
				    #parentanchor = top|hcenter
				    blockoverride "header_text"
				    {
						fontsize = 30
				        text = cardinals_candidacy
				    }
					blockoverride "button_close"
					{
						visible = no
					}
				}
			}
			size = {100% 32%}
			parentanchor = bottom|left
			allow_outside = yes
			window_cardinals_special_character = {
				visible = "[And(Character.IsValid, GetScriptedGui('can_see_my_candidate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
				parentanchor = vcenter|left
				position = {250 -25}
				datacontext = "[GetPlayer.MakeScope.Var('cardinal_player_candidate').GetCharacter]"
				blockoverride "text"    {   raw_text = cardinals_my_candidate}
				blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter }}
				blockoverride "score" {raw_text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('bishop_to_cardinal_score')|0]"}
				blockoverride "fontsize" { fontsize = 26 }
				window_cardinals_campaign = {position = { -25 50 }}
				window_cardinals_score = {position = { 50 -5 }}
				window_cardinals_invest_divest = {
					parentanchor = bottom|hcenter
					position = { -10 15 }
				}
			}
			hbox = {
				name = "change_candidate"
				layoutpolicy_horizontal = expanding
				#visible = "[GetScriptedGui('can_see_my_candidate').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				visible_at_creation = yes
				parentanchor = top
				position = {-625 -170}
				#margin = { 0 5 }
				scale = 1.3
				#raw_tooltip = "#Kardinalskandidaten ändern"
				button_round = {
					name = "change_beneficiary"
					text = "GHW_CHANGE_BENEFICIARY"
					onclick = "[OpenCharacterInteraction( 'select_cardinal_candidate_interaction', GetPlayer )]"
					raw_tooltip = "#T Kardinalskandidaten ändern#!"

					button_change = {
						alwaystransparent = yes
						parentanchor = center
					}
				}
			}
			portrait_unknown_head = {
				visible = "[GetScriptedGui('can_see_my_candidate_fail').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				parentanchor = vcenter|left
				position = {273 -25}
				scale = 1.1
				blockoverride "text"    {   raw_text = cardinals_my_candidate}
				window_cardinals_campaign = {position = { -45 5}}
				window_cardinals_score = {position = { 510 -5 }}
			}

			window_cardinals_special_character = {
				parentanchor = vcenter|right
				position = {-220 -25}
				datacontext = "[Religion.MakeScope.Var('predicted_cardinal').GetCharacter]"
				blockoverride "text"    {   raw_text = cardinals_predictus}
				blockoverride "portrait" {  window_cardinals_portrait = { parentanchor = hcenter|vcenter }}
				blockoverride "score" {text = "[GuiScope.SetRoot(Character.MakeScope).ScriptValue('bishop_to_cardinal_score')|0]"}
				blockoverride "fontsize" { fontsize = 26 }
				window_cardinals_campaign   = {position = { -25 50 }}
				window_cardinals_score      = {position = { 50 -5 }}
			}
		}
		#expand = {}

		#############################################
		#############################################
		################# HOLY CHURCH #################
		#############################################
		#############################################

		background = {
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"
			margin = { -30 0 } #remove this and _apse below to get Option1
			margin_bottom = -720
			texture = "gfx/interface/illustrations/decisions/MA_painted_tympanum.dds"
			fittype = centercrop
			modify_texture = {
				texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
				blend_mode = alphamultiply
			}
			modify_texture = {
				texture = "gfx/interface/component_masks/mask_clouds.dds"
				blend_mode = alphamultiply
				spriteType = corneredTiled
				alpha = 1.1
			}
			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
				blend_mode = alphamultiply
				alpha = 0.4
			}
		}

		vbox = {
			name = "tab_holychurch"
			visible = "[GetVariableSystem.HasValue( 'church_view_tabs', 'holychurch' )]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			using = Window_Margins

			spacing = 1
			margin_top = 110

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				alpha = 0
			}

			hbox = {
				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datamodel = "[GetPlayer.MakeScope.GetList('TCT_ecumenical_patriarch_list')]"
					margin_right = 25
					item = {
						flowcontainer = {
							spacer = {
								size = { 80 85 }
							}
							datacontext = "[Scope.GetCharacter]"
							vbox = {
								text_label_center = {
									parentanchor = top|left
									text = "[Scope.GetCharacter.Custom('TCT_get_patriarchate_of_pentarch')]"
									fontsize = 25
									default_format = "#high"
									#layoutpolicy_horizontal = expanding
									using = Font_Type_Flavor
									margin_bottom = 30
									max_width = 200
								}

								portrait_shoulders = {
									background = {
										using = Background_Area_Dark
										margin_top = 25
										margin_bottom = 10
										margin_left = 20
										margin_right = 20
									}
									background = {
										using = Background_Frame
										margin_top = 20
										margin_bottom = 5
										margin_left = 15
										margin_right = 15
									}
									background = {
										using = Background_Area_Dark
										margin_top = 19
										margin_bottom = 4
										margin_left = 14
										margin_right = 14
									}
								}

								background = {
									using = Background_Area
								}

								background = {
									texture = "gfx/interface/component_masks/patterns/mask_pattern_04.dds"
									spriteType = Corneredtiled
									margin_top = -20
									margin_bottom = -10
									margin_left = -10
									margin_right = -10
									using = Color_Red
									alpha = 0.25

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_rough_edges.dds"
										spriteType = Corneredtiled
										spriteborder = { 20 20 }
										texture_density = 5
										blend_mode = alphamultiply
									}
								}
								text_label_center = {
									text = "TCT_ecumenical_patriarch_name"
									#layoutpolicy_horizontal = expanding
									max_width = 200
									fontsize = 18
								}
							}
						}
					}
				}
				spacer = {
					size = { 75 75 }
					#margin_top = 12
				}

				dynamicgridbox = { # Pentarchs
					name = "Pentarchs"
					datamodel = "[GetPlayer.MakeScope.GetList('TCT_pentarchs_list')]"
					#layoutpolicy_horizontal = expanding
					#layoutpolicy_vertical = expanding
					datamodel_wrap = 1
					#flipdirection = yes
					item = {
						flowcontainer = {
							margin_top = 5
							margin_bottom = 2
							margin_left = 12
							margin_right = 12

							vbox = {

								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								datacontext = "[Scope.GetCharacter]"
								spacer = {
									size = { 5 50 }
								}
								text_label_center = {
									margin_top = 5
									parentanchor = left
									fontsize = 20
									text = "[Scope.GetCharacter.Custom('TCT_get_patriarchate_of_pentarch')]"
									layoutpolicy_horizontal = expanding
									max_width = 150
									size = { 150 100 }
								}
								spacer = {
									size = { 0 5 }
								}
								portrait_head = {
									#size = { 150 200 }
									parentanchor = left
									#datacontext = "[Character]"
								}
								text_single = {
									parentanchor = left
									text = "[Scope.GetCharacter.GetFirstNameNoTooltip]"
									max_width = 100
									fontsize = 16
									size = { 150 100 }
								}
							}
						}
					}
				}
				spacer = {
					size = { 20 0 }
				}
			}
			spacer = {
				size = { 20 25 }
			}
			vbox = {
				name = "autocephalies"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				size = { 100% 100% }
				margin_top = 50

				text_label_center = {
					layoutpolicy_horizontal = expanding
					text = "TCT_archbishoprics"
					default_format = "#medium"
					fontsize = 25

				}
				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					blockoverride "scrollbox_content"
					{
						spacing = 15
						margin_top = 20

						state = {
							name = "faith_view_refresh"
							using = Animation_Refresh_FadeOut
						}

						state = {
							using = Animation_Refresh_FadeIn
						}
						# divider_light = {
						# 	layoutpolicy_vertical = expanding
						# }
						vbox = {
							layoutpolicy_horizontal = expanding
							datamodel = "[GetPlayer.MakeScope.GetList('TCT_archbishops_list')]"
							item = {
								hbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									datacontext = "[Scope.GetCharacter]"

									background = {
										using = Background_Area
									}
									portrait_head = {
										parentanchor = left
									}
									flowcontainer = {
										direction = vertical
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding
										margin_top = 10
										margin_bottom = 10
										margin_left = 15
										spacing = 13
										text_label_center = {
											text = "[Character.GetPrimaryTitle.GetNameNoTooltip]"
											using = Font_Size_Medium
											default_format = "#high"
											layoutpolicy_horizontal = expanding
											#align = nobaseline
											#margin_bottom = 3
											#margin_left = 10
										}
										text_single = {
											parentanchor = left
											layoutpolicy_horizontal = expanding
											text = "TCT_patriarch_name"
											#size = { 150 100 }
										}
										text_single = {
											parentanchor = left
											layoutpolicy_horizontal = expanding
											text = "TCT_archbishop_territory"
											#size = { 150 100 }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

types uniuitrinitytypes {
    type UniUI_Trinity_window_faith_widget_doctrine_item = container {
        # widget_doctrine_item = {
        #     visible = "[Faith.HasDoctrineByKey( 'doctrine_autocephaly_head' )]"
        #     blockoverride "background" {}

        #     blockoverride "doctrine_icon"
        #     {
        #         texture = "[GetDoctrine( 'doctrine_autocephaly_head' ).GetIcon]"
        #     }

        #     blockoverride "wdi_context"
        #     {
        #         datacontext = "[GetDoctrine('doctrine_autocephaly_head')]"
        #         datacontext = "[Faith]"
        #     }
        # }
		widget_doctrine_item = {
            visible = "[Faith.HasDoctrineByKey( 'doctrine_independent_papacy_head' )]"
            blockoverride "background" {}

            blockoverride "doctrine_icon"
            {
                texture = "[GetDoctrine( 'doctrine_independent_papacy_head' ).GetIcon]"
            }

            blockoverride "wdi_context"
            {
                datacontext = "[GetDoctrine('doctrine_independent_papacy_head')]"
                datacontext = "[Faith]"
            }
        }
        widget_doctrine_item = {
            visible = "[And(Faith.HasDoctrineByKey('doctrine_spiritual_head'), Not(Faith.HasDoctrineByKey('doctrine_independent_papacy_head')))]"

            blockoverride "background" {}

            blockoverride "doctrine_icon"
            {
                texture = "[GetDoctrine( 'doctrine_spiritual_head' ).GetIcon]"
            }

            blockoverride "wdi_context"
            {
                datacontext = "[GetDoctrine('doctrine_spiritual_head')]"
                datacontext = "[Faith]"
            }
        }

		widget_doctrine_item = {
			visible = "[Faith.HasDoctrineByKey( 'doctrine_temporal_head' )]"

			blockoverride "background" {}

			blockoverride "doctrine_icon"
			{
				texture = "[GetDoctrine( 'doctrine_temporal_head' ).GetIcon]"
			}

			blockoverride "wdi_context"
			{
				datacontext = "[GetDoctrine('doctrine_temporal_head')]"
				datacontext = "[Faith]"
			}
		}
    }

	type struggle_mini_map_mode = flowcontainer {
		position = { -200 -25 }
		parentanchor = bottom|left
		widgetanchor = bottom|right
		spacing = 20

		mini_map_mode = {}

		flowcontainer = {
			minimumsize = { 0 60 }

			background = {
				using = Background_Area_Dark
				margin = { 10 0 }
				color = { 0.15 0.15 0.15 0.75 }
			}
			spacing = 5

			flowcontainer = {
				ignoreinvisible = yes
				parentanchor = vcenter
				visible = "[EqualTo_uint32(Struggle.GetID, '(uint32)1')]"

				icon_button_mapmode = {
					blockoverride "mm_button" {
						onclick = "[GetScriptedGui('struggle_supporter_mapmode').Execute( GuiScope.End )]"
					}
					blockoverride "mm_icon" {
						texture = "gfx/interface/icons/laws/papal_investiture.dds"
					}
					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode( 'struggle_supporter' )]"
					}
				}

				icon_button_mapmode = {
					blockoverride "mm_button" {
						onclick = "[GetScriptedGui('struggle_detractor_dukes').Execute( GuiScope.End )]"
					}
					blockoverride "mm_icon" {
						texture = "gfx/interface/icons/laws/free_investiture.dds"
						# size = { 25 25 }
						# position = { -1 0 }
						# parentanchor = center
					}
					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode( 'struggle_detractor_dukes' )]"
					}
				}

				# button_round = {
				# 	enabled = "[GetScriptedGui('reset_barony_colors').IsValid( GuiScope.End )]"
				# 	onclick = "[GetScriptedGui('reset_barony_colors').Execute( GuiScope.End )]"
				# 	size = { 40 40 }
				#
				# 	button_clear = {
				# 		alwaystransparent = yes
				# 		parentanchor = center
				# 		size = { 70% 70% }
				# 	}
				# }
			}
		}
	}
}